<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="1" failed="0" total="1" passed="0">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="1341" started-at="2020-01-25T10:24:05Z" finished-at="2020-01-25T10:24:06Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="1341" started-at="2020-01-25T10:24:05Z" finished-at="2020-01-25T10:24:06Z">
      <class name="scripts.TestLogin">
        <test-method status="FAIL" signature="openApplication()[pri:0, instance:scripts.TestLogin@180bc464]" name="openApplication" is-config="true" duration-ms="0" started-at="2020-01-25T15:54:05Z" finished-at="2020-01-25T15:54:05Z">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[The driver executable does not exist: C:\Users\Ram Mani Rai\eclipse-workspace\SeleniumPractice\.\driver\geckodriver.exe]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: The driver executable does not exist: C:\Users\Ram Mani Rai\eclipse-workspace\SeleniumPractice\.\driver\geckodriver.exe
	at com.google.common.base.Preconditions.checkState(Preconditions.java:585)
	at org.openqa.selenium.remote.service.DriverService.checkExecutable(DriverService.java:137)
	at org.openqa.selenium.remote.service.DriverService.findExecutable(DriverService.java:132)
	at org.openqa.selenium.firefox.GeckoDriverService.access$100(GeckoDriverService.java:43)
	at org.openqa.selenium.firefox.GeckoDriverService$Builder.findDefaultExecutable(GeckoDriverService.java:166)
	at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:346)
	at org.openqa.selenium.firefox.FirefoxDriver.toExecutor(FirefoxDriver.java:168)
	at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:125)
	at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:103)
	at generic.BaseTest.openApplication(BaseTest.java:24)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:589)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:822)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1130)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:113)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:206)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:177)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApplication -->
        <test-method status="SKIP" signature="testLogin()[pri:0, instance:scripts.TestLogin@180bc464]" name="testLogin" duration-ms="1" started-at="2020-01-25T15:54:06Z" finished-at="2020-01-25T15:54:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLogin -->
        <test-method status="SKIP" signature="closeApplication()[pri:0, instance:scripts.TestLogin@180bc464]" name="closeApplication" is-config="true" duration-ms="0" started-at="2020-01-25T15:54:06Z" finished-at="2020-01-25T15:54:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeApplication -->
      </class> <!-- scripts.TestLogin -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
